{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "016a7dcc",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:11.606193Z",
     "iopub.status.busy": "2024-11-19T20:16:11.604946Z",
     "iopub.status.idle": "2024-11-19T20:16:40.845029Z",
     "shell.execute_reply": "2024-11-19T20:16:40.843456Z"
    },
    "papermill": {
     "duration": 29.248171,
     "end_time": "2024-11-19T20:16:40.847414",
     "exception": false,
     "start_time": "2024-11-19T20:16:11.599243",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: ipywidgets in /opt/conda/lib/python3.10/site-packages (7.7.1)\r\n",
      "Requirement already satisfied: ipykernel>=4.5.1 in /opt/conda/lib/python3.10/site-packages (from ipywidgets) (6.29.4)\r\n",
      "Requirement already satisfied: ipython-genutils~=0.2.0 in /opt/conda/lib/python3.10/site-packages (from ipywidgets) (0.2.0)\r\n",
      "Requirement already satisfied: traitlets>=4.3.1 in /opt/conda/lib/python3.10/site-packages (from ipywidgets) (5.14.3)\r\n",
      "Requirement already satisfied: widgetsnbextension~=3.6.0 in /opt/conda/lib/python3.10/site-packages (from ipywidgets) (3.6.9)\r\n",
      "Requirement already satisfied: ipython>=4.0.0 in /opt/conda/lib/python3.10/site-packages (from ipywidgets) (8.21.0)\r\n",
      "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from ipywidgets) (3.0.11)\r\n",
      "Requirement already satisfied: comm>=0.1.1 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (0.2.2)\r\n",
      "Requirement already satisfied: debugpy>=1.6.5 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (1.8.1)\r\n",
      "Requirement already satisfied: jupyter-client>=6.1.12 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (7.4.9)\r\n",
      "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (5.7.2)\r\n",
      "Requirement already satisfied: matplotlib-inline>=0.1 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (0.1.7)\r\n",
      "Requirement already satisfied: nest-asyncio in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (1.6.0)\r\n",
      "Requirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (21.3)\r\n",
      "Requirement already satisfied: psutil in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (5.9.3)\r\n",
      "Requirement already satisfied: pyzmq>=24 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (26.0.3)\r\n",
      "Requirement already satisfied: tornado>=6.1 in /opt/conda/lib/python3.10/site-packages (from ipykernel>=4.5.1->ipywidgets) (6.4.1)\r\n",
      "Requirement already satisfied: decorator in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (5.1.1)\r\n",
      "Requirement already satisfied: jedi>=0.16 in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (0.19.1)\r\n",
      "Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (3.0.47)\r\n",
      "Requirement already satisfied: pygments>=2.4.0 in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (2.18.0)\r\n",
      "Requirement already satisfied: stack-data in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (0.6.2)\r\n",
      "Requirement already satisfied: exceptiongroup in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (1.2.0)\r\n",
      "Requirement already satisfied: pexpect>4.3 in /opt/conda/lib/python3.10/site-packages (from ipython>=4.0.0->ipywidgets) (4.9.0)\r\n",
      "Requirement already satisfied: notebook>=4.4.1 in /opt/conda/lib/python3.10/site-packages (from widgetsnbextension~=3.6.0->ipywidgets) (6.5.7)\r\n",
      "Requirement already satisfied: parso<0.9.0,>=0.8.3 in /opt/conda/lib/python3.10/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets) (0.8.4)\r\n",
      "Requirement already satisfied: entrypoints in /opt/conda/lib/python3.10/site-packages (from jupyter-client>=6.1.12->ipykernel>=4.5.1->ipywidgets) (0.4)\r\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from jupyter-client>=6.1.12->ipykernel>=4.5.1->ipywidgets) (2.9.0.post0)\r\n",
      "Requirement already satisfied: platformdirs>=2.5 in /opt/conda/lib/python3.10/site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel>=4.5.1->ipywidgets) (3.11.0)\r\n",
      "Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (3.1.4)\r\n",
      "Requirement already satisfied: argon2-cffi in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (23.1.0)\r\n",
      "Requirement already satisfied: nbformat in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (5.10.4)\r\n",
      "Requirement already satisfied: nbconvert>=5 in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (6.4.5)\r\n",
      "Requirement already satisfied: Send2Trash>=1.8.0 in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.8.3)\r\n",
      "Requirement already satisfied: terminado>=0.8.3 in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.18.1)\r\n",
      "Requirement already satisfied: prometheus-client in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.20.0)\r\n",
      "Requirement already satisfied: nbclassic>=0.4.7 in /opt/conda/lib/python3.10/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.1.0)\r\n",
      "Requirement already satisfied: ptyprocess>=0.5 in /opt/conda/lib/python3.10/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets) (0.7.0)\r\n",
      "Requirement already satisfied: wcwidth in /opt/conda/lib/python3.10/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets) (0.2.13)\r\n",
      "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->ipykernel>=4.5.1->ipywidgets) (3.1.2)\r\n",
      "Requirement already satisfied: executing>=1.2.0 in /opt/conda/lib/python3.10/site-packages (from stack-data->ipython>=4.0.0->ipywidgets) (2.0.1)\r\n",
      "Requirement already satisfied: asttokens>=2.1.0 in /opt/conda/lib/python3.10/site-packages (from stack-data->ipython>=4.0.0->ipywidgets) (2.4.1)\r\n",
      "Requirement already satisfied: pure-eval in /opt/conda/lib/python3.10/site-packages (from stack-data->ipython>=4.0.0->ipywidgets) (0.2.2)\r\n",
      "Requirement already satisfied: six>=1.12.0 in /opt/conda/lib/python3.10/site-packages (from asttokens>=2.1.0->stack-data->ipython>=4.0.0->ipywidgets) (1.16.0)\r\n",
      "Requirement already satisfied: notebook-shim>=0.2.3 in /opt/conda/lib/python3.10/site-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.2.4)\r\n",
      "Requirement already satisfied: mistune<2,>=0.8.1 in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.8.4)\r\n",
      "Requirement already satisfied: jupyterlab-pygments in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.3.0)\r\n",
      "Requirement already satisfied: bleach in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (6.1.0)\r\n",
      "Requirement already satisfied: pandocfilters>=1.4.1 in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.5.0)\r\n",
      "Requirement already satisfied: testpath in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.6.0)\r\n",
      "Requirement already satisfied: defusedxml in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.7.1)\r\n",
      "Requirement already satisfied: beautifulsoup4 in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.12.3)\r\n",
      "Requirement already satisfied: nbclient<0.6.0,>=0.5.0 in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.5.13)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.1.5)\r\n",
      "Requirement already satisfied: fastjsonschema>=2.15 in /opt/conda/lib/python3.10/site-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.19.1)\r\n",
      "Requirement already satisfied: jsonschema>=2.6 in /opt/conda/lib/python3.10/site-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.22.0)\r\n",
      "Requirement already satisfied: argon2-cffi-bindings in /opt/conda/lib/python3.10/site-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (21.2.0)\r\n",
      "Requirement already satisfied: attrs>=22.2.0 in /opt/conda/lib/python3.10/site-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (23.2.0)\r\n",
      "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /opt/conda/lib/python3.10/site-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2023.12.1)\r\n",
      "Requirement already satisfied: referencing>=0.28.4 in /opt/conda/lib/python3.10/site-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.35.1)\r\n",
      "Requirement already satisfied: rpds-py>=0.7.1 in /opt/conda/lib/python3.10/site-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.18.1)\r\n",
      "Requirement already satisfied: jupyter-server<3,>=1.8 in /opt/conda/lib/python3.10/site-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.12.5)\r\n",
      "Requirement already satisfied: cffi>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.16.0)\r\n",
      "Requirement already satisfied: soupsieve>1.2 in /opt/conda/lib/python3.10/site-packages (from beautifulsoup4->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.5)\r\n",
      "Requirement already satisfied: webencodings in /opt/conda/lib/python3.10/site-packages (from bleach->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.5.1)\r\n",
      "Requirement already satisfied: pycparser in /opt/conda/lib/python3.10/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.22)\r\n",
      "Requirement already satisfied: anyio>=3.1.0 in /opt/conda/lib/python3.10/site-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.4.0)\r\n",
      "Requirement already satisfied: jupyter-events>=0.9.0 in /opt/conda/lib/python3.10/site-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.10.0)\r\n",
      "Requirement already satisfied: jupyter-server-terminals in /opt/conda/lib/python3.10/site-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.5.3)\r\n",
      "Requirement already satisfied: overrides in /opt/conda/lib/python3.10/site-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (7.7.0)\r\n",
      "Requirement already satisfied: websocket-client in /opt/conda/lib/python3.10/site-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.8.0)\r\n",
      "Requirement already satisfied: idna>=2.8 in /opt/conda/lib/python3.10/site-packages (from anyio>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (3.7)\r\n",
      "Requirement already satisfied: sniffio>=1.1 in /opt/conda/lib/python3.10/site-packages (from anyio>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.3.1)\r\n",
      "Requirement already satisfied: typing-extensions>=4.1 in /opt/conda/lib/python3.10/site-packages (from anyio>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.12.2)\r\n",
      "Requirement already satisfied: python-json-logger>=2.0.4 in /opt/conda/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.0.7)\r\n",
      "Requirement already satisfied: pyyaml>=5.3 in /opt/conda/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (6.0.2)\r\n",
      "Requirement already satisfied: rfc3339-validator in /opt/conda/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.1.4)\r\n",
      "Requirement already satisfied: rfc3986-validator>=0.1.1 in /opt/conda/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.1.1)\r\n",
      "Requirement already satisfied: fqdn in /opt/conda/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.5.1)\r\n",
      "Requirement already satisfied: isoduration in /opt/conda/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (20.11.0)\r\n",
      "Requirement already satisfied: jsonpointer>1.13 in /opt/conda/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.4)\r\n",
      "Requirement already satisfied: uri-template in /opt/conda/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.3.0)\r\n",
      "Requirement already satisfied: webcolors>=1.11 in /opt/conda/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (24.6.0)\r\n",
      "Requirement already satisfied: arrow>=0.15.0 in /opt/conda/lib/python3.10/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.3.0)\r\n",
      "Requirement already satisfied: types-python-dateutil>=2.8.10 in /opt/conda/lib/python3.10/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.9.0.20240316)\r\n",
      "/kaggle/input/ipl-dataset/ipl_data.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn import preprocessing\n",
    "import keras \n",
    "import tensorflow as tf\n",
    "!pip install ipywidgets\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c513e187",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:40.860695Z",
     "iopub.status.busy": "2024-11-19T20:16:40.859481Z",
     "iopub.status.idle": "2024-11-19T20:16:41.217766Z",
     "shell.execute_reply": "2024-11-19T20:16:41.216560Z"
    },
    "papermill": {
     "duration": 0.367613,
     "end_time": "2024-11-19T20:16:41.220428",
     "exception": false,
     "start_time": "2024-11-19T20:16:40.852815",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mid</th>\n",
       "      <th>date</th>\n",
       "      <th>venue</th>\n",
       "      <th>bat_team</th>\n",
       "      <th>bowl_team</th>\n",
       "      <th>batsman</th>\n",
       "      <th>bowler</th>\n",
       "      <th>runs</th>\n",
       "      <th>wickets</th>\n",
       "      <th>overs</th>\n",
       "      <th>runs_last_5</th>\n",
       "      <th>wickets_last_5</th>\n",
       "      <th>striker</th>\n",
       "      <th>non-striker</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2008-04-18</td>\n",
       "      <td>M Chinnaswamy Stadium</td>\n",
       "      <td>Kolkata Knight Riders</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>SC Ganguly</td>\n",
       "      <td>P Kumar</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2008-04-18</td>\n",
       "      <td>M Chinnaswamy Stadium</td>\n",
       "      <td>Kolkata Knight Riders</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>BB McCullum</td>\n",
       "      <td>P Kumar</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2008-04-18</td>\n",
       "      <td>M Chinnaswamy Stadium</td>\n",
       "      <td>Kolkata Knight Riders</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>BB McCullum</td>\n",
       "      <td>P Kumar</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2008-04-18</td>\n",
       "      <td>M Chinnaswamy Stadium</td>\n",
       "      <td>Kolkata Knight Riders</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>BB McCullum</td>\n",
       "      <td>P Kumar</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2008-04-18</td>\n",
       "      <td>M Chinnaswamy Stadium</td>\n",
       "      <td>Kolkata Knight Riders</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>BB McCullum</td>\n",
       "      <td>P Kumar</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   mid        date                  venue               bat_team  \\\n",
       "0    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
       "1    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
       "2    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
       "3    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
       "4    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
       "\n",
       "                     bowl_team      batsman   bowler  runs  wickets  overs  \\\n",
       "0  Royal Challengers Bangalore   SC Ganguly  P Kumar     1        0    0.1   \n",
       "1  Royal Challengers Bangalore  BB McCullum  P Kumar     1        0    0.2   \n",
       "2  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.2   \n",
       "3  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.3   \n",
       "4  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.4   \n",
       "\n",
       "   runs_last_5  wickets_last_5  striker  non-striker  total  \n",
       "0            1               0        0            0    222  \n",
       "1            1               0        0            0    222  \n",
       "2            2               0        0            0    222  \n",
       "3            2               0        0            0    222  \n",
       "4            2               0        0            0    222  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ipl = pd.read_csv('/kaggle/input/ipl-dataset/ipl_data.csv')\n",
    "ipl.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fc32c03c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.232831Z",
     "iopub.status.busy": "2024-11-19T20:16:41.232448Z",
     "iopub.status.idle": "2024-11-19T20:16:41.247768Z",
     "shell.execute_reply": "2024-11-19T20:16:41.246583Z"
    },
    "papermill": {
     "duration": 0.024606,
     "end_time": "2024-11-19T20:16:41.250341",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.225735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Dropping certain features \n",
    "df = ipl.drop(['date', 'runs', 'wickets', 'overs', 'runs_last_5', 'wickets_last_5','mid', 'striker', 'non-striker'], axis =1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "92f09568",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.262436Z",
     "iopub.status.busy": "2024-11-19T20:16:41.262054Z",
     "iopub.status.idle": "2024-11-19T20:16:41.270906Z",
     "shell.execute_reply": "2024-11-19T20:16:41.269648Z"
    },
    "papermill": {
     "duration": 0.017721,
     "end_time": "2024-11-19T20:16:41.273299",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.255578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = df.drop(['total'], axis =1)\n",
    "y = df['total']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f0401b9f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.285408Z",
     "iopub.status.busy": "2024-11-19T20:16:41.284948Z",
     "iopub.status.idle": "2024-11-19T20:16:41.361242Z",
     "shell.execute_reply": "2024-11-19T20:16:41.359766Z"
    },
    "papermill": {
     "duration": 0.085266,
     "end_time": "2024-11-19T20:16:41.363789",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.278523",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Label Encoding\n",
    "\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# Create a LabelEncoder object for each categorical feature\n",
    "venue_encoder = LabelEncoder()\n",
    "batting_team_encoder = LabelEncoder()\n",
    "bowling_team_encoder = LabelEncoder()\n",
    "striker_encoder = LabelEncoder()\n",
    "bowler_encoder = LabelEncoder()\n",
    "\n",
    "# Fit and transform the categorical features with label encoding\n",
    "X['venue'] = venue_encoder.fit_transform(X['venue'])\n",
    "X['bat_team'] = batting_team_encoder.fit_transform(X['bat_team'])\n",
    "X['bowl_team'] = bowling_team_encoder.fit_transform(X['bowl_team'])\n",
    "X['batsman'] = striker_encoder.fit_transform(X['batsman'])\n",
    "X['bowler'] = bowler_encoder.fit_transform(X['bowler'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "58e20ded",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.377168Z",
     "iopub.status.busy": "2024-11-19T20:16:41.376704Z",
     "iopub.status.idle": "2024-11-19T20:16:41.518337Z",
     "shell.execute_reply": "2024-11-19T20:16:41.517014Z"
    },
    "papermill": {
     "duration": 0.151985,
     "end_time": "2024-11-19T20:16:41.521047",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.369062",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Train test Split \n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3ef6a113",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.533618Z",
     "iopub.status.busy": "2024-11-19T20:16:41.533236Z",
     "iopub.status.idle": "2024-11-19T20:16:41.552068Z",
     "shell.execute_reply": "2024-11-19T20:16:41.551064Z"
    },
    "papermill": {
     "duration": 0.028135,
     "end_time": "2024-11-19T20:16:41.554476",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.526341",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "scaler = MinMaxScaler()\n",
    "\n",
    "# Fit the scaler on the training data and transform both training and testing data\n",
    "X_train_scaled = scaler.fit_transform(X_train)\n",
    "X_test_scaled = scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "44df7350",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.566906Z",
     "iopub.status.busy": "2024-11-19T20:16:41.566304Z",
     "iopub.status.idle": "2024-11-19T20:16:41.755813Z",
     "shell.execute_reply": "2024-11-19T20:16:41.754666Z"
    },
    "papermill": {
     "duration": 0.198709,
     "end_time": "2024-11-19T20:16:41.758461",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.559752",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define the neural network model\n",
    "model = keras.Sequential([\n",
    "    keras.layers.Input( shape=(X_train_scaled.shape[1],)),  # Input layer\n",
    "    keras.layers.Dense(512, activation='relu'),  # Hidden layer with 512 units and ReLU activation\n",
    "    keras.layers.Dense(216, activation='relu'),  # Hidden layer with 216 units and ReLU activation\n",
    "    keras.layers.Dense(1, activation='linear')  # Output layer with linear activation for regression\n",
    "])\n",
    "\n",
    "# Compile the model with Huber loss\n",
    "huber_loss = tf.keras.losses.Huber(delta=1.0)  # You can adjust the 'delta' parameter as needed\n",
    "model.compile(optimizer='adam', loss=huber_loss)  # Use Huber loss for regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dec6eb6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:16:41.771901Z",
     "iopub.status.busy": "2024-11-19T20:16:41.771053Z",
     "iopub.status.idle": "2024-11-19T20:19:37.673628Z",
     "shell.execute_reply": "2024-11-19T20:19:37.672550Z"
    },
    "papermill": {
     "duration": 175.911274,
     "end_time": "2024-11-19T20:19:37.675874",
     "exception": false,
     "start_time": "2024-11-19T20:16:41.764600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 4ms/step - loss: 55.2093 - val_loss: 22.0480\n",
      "Epoch 2/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.3258 - val_loss: 21.9884\n",
      "Epoch 3/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.2838 - val_loss: 21.9178\n",
      "Epoch 4/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.1926 - val_loss: 22.3510\n",
      "Epoch 5/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.2577 - val_loss: 22.3967\n",
      "Epoch 6/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.2300 - val_loss: 21.8556\n",
      "Epoch 7/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.3038 - val_loss: 21.8106\n",
      "Epoch 8/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.0744 - val_loss: 21.8462\n",
      "Epoch 9/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.0348 - val_loss: 22.1716\n",
      "Epoch 10/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 22.0339 - val_loss: 22.0567\n",
      "Epoch 11/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 22.1851 - val_loss: 21.8555\n",
      "Epoch 12/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 22.1957 - val_loss: 21.8289\n",
      "Epoch 13/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.8906 - val_loss: 21.9904\n",
      "Epoch 14/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.9982 - val_loss: 22.2524\n",
      "Epoch 15/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.9520 - val_loss: 21.6558\n",
      "Epoch 16/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.8836 - val_loss: 21.7256\n",
      "Epoch 17/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.8460 - val_loss: 21.5329\n",
      "Epoch 18/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 21.6581 - val_loss: 21.6790\n",
      "Epoch 19/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 21.7290 - val_loss: 21.5368\n",
      "Epoch 20/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 21.7588 - val_loss: 21.3703\n",
      "Epoch 21/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 21.5439 - val_loss: 21.2666\n",
      "Epoch 22/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.5502 - val_loss: 21.1742\n",
      "Epoch 23/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.5546 - val_loss: 21.2121\n",
      "Epoch 24/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.4027 - val_loss: 21.1230\n",
      "Epoch 25/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.4027 - val_loss: 21.4917\n",
      "Epoch 26/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.1324 - val_loss: 21.5084\n",
      "Epoch 27/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.1670 - val_loss: 20.9365\n",
      "Epoch 28/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.2213 - val_loss: 20.9858\n",
      "Epoch 29/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 21.0674 - val_loss: 20.7887\n",
      "Epoch 30/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.0605 - val_loss: 21.0013\n",
      "Epoch 31/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 21.0043 - val_loss: 20.5577\n",
      "Epoch 32/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.8221 - val_loss: 20.4492\n",
      "Epoch 33/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.8248 - val_loss: 20.5690\n",
      "Epoch 34/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.6581 - val_loss: 20.2829\n",
      "Epoch 35/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.7100 - val_loss: 20.3294\n",
      "Epoch 36/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.3879 - val_loss: 20.3182\n",
      "Epoch 37/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.3371 - val_loss: 20.0150\n",
      "Epoch 38/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 20.1429 - val_loss: 20.1356\n",
      "Epoch 39/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.2300 - val_loss: 19.7745\n",
      "Epoch 40/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 20.0221 - val_loss: 19.7740\n",
      "Epoch 41/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 19.8745 - val_loss: 19.8683\n",
      "Epoch 42/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 19.7642 - val_loss: 19.5845\n",
      "Epoch 43/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 19.7505 - val_loss: 19.6839\n",
      "Epoch 44/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 19.5978 - val_loss: 19.2630\n",
      "Epoch 45/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 19.6018 - val_loss: 19.1845\n",
      "Epoch 46/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 19.4595 - val_loss: 19.2873\n",
      "Epoch 47/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 19.2719 - val_loss: 19.1319\n",
      "Epoch 48/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 19.3566 - val_loss: 19.0017\n",
      "Epoch 49/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - loss: 19.1595 - val_loss: 18.9091\n",
      "Epoch 50/50\n",
      "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 19.1628 - val_loss: 19.2231\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7db3b3cadd20>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train the model\n",
    "model.fit(X_train_scaled, y_train, epochs=50, batch_size=64, validation_data=(X_test_scaled, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "87a697f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:19:38.073940Z",
     "iopub.status.busy": "2024-11-19T20:19:38.073512Z",
     "iopub.status.idle": "2024-11-19T20:19:38.418099Z",
     "shell.execute_reply": "2024-11-19T20:19:38.416937Z"
    },
    "papermill": {
     "duration": 0.574848,
     "end_time": "2024-11-19T20:19:38.420677",
     "exception": false,
     "start_time": "2024-11-19T20:19:37.845829",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model_losses = pd.DataFrame(model.history.history)\n",
    "model_losses.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5e405675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:19:38.747925Z",
     "iopub.status.busy": "2024-11-19T20:19:38.747532Z",
     "iopub.status.idle": "2024-11-19T20:19:40.263888Z",
     "shell.execute_reply": "2024-11-19T20:19:40.262617Z"
    },
    "papermill": {
     "duration": 1.685015,
     "end_time": "2024-11-19T20:19:40.266511",
     "exception": false,
     "start_time": "2024-11-19T20:19:38.581496",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m713/713\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "19.71435240327567"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Make predictions\n",
    "predictions = model.predict(X_test_scaled)\n",
    "\n",
    "from sklearn.metrics import mean_absolute_error,mean_squared_error\n",
    "mean_absolute_error(y_test,predictions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5c1c3fbe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:19:40.600261Z",
     "iopub.status.busy": "2024-11-19T20:19:40.599822Z",
     "iopub.status.idle": "2024-11-19T20:19:40.664298Z",
     "shell.execute_reply": "2024-11-19T20:19:40.663006Z"
    },
    "papermill": {
     "duration": 0.236997,
     "end_time": "2024-11-19T20:19:40.668028",
     "exception": false,
     "start_time": "2024-11-19T20:19:40.431031",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import ipywidgets as widgets\n",
    "from IPython.display import display, clear_output\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "venue = widgets.Dropdown(options=df['venue'].unique().tolist(),description='Select Venue:')\n",
    "batting_team = widgets.Dropdown(options =df['bat_team'].unique().tolist(),  description='Select Batting Team:')\n",
    "bowling_team = widgets.Dropdown(options=df['bowl_team'].unique().tolist(),  description='Select Batting Team:')\n",
    "striker = widgets.Dropdown(options=df['batsman'].unique().tolist(), description='Select Striker:')\n",
    "bowler = widgets.Dropdown(options=df['bowler'].unique().tolist(), description='Select Bowler:')\n",
    "\n",
    "predict_button = widgets.Button(description=\"Predict Score\")\n",
    "\n",
    "def predict_score(b):\n",
    "    with output:\n",
    "        clear_output()  # Clear the previous output\n",
    "        \n",
    "\n",
    "        # Decode the encoded values back to their original values\n",
    "        decoded_venue = venue_encoder.transform([venue.value])\n",
    "        decoded_batting_team = batting_team_encoder.transform([batting_team.value])\n",
    "        decoded_bowling_team = bowling_team_encoder.transform([bowling_team.value])\n",
    "        decoded_striker = striker_encoder.transform([striker.value])\n",
    "        decoded_bowler = bowler_encoder.transform([bowler.value])\n",
    "\n",
    "\n",
    "        input = np.array([decoded_venue,  decoded_batting_team, decoded_bowling_team,decoded_striker, decoded_bowler])\n",
    "        input = input.reshape(1,5)\n",
    "        input = scaler.transform(input)\n",
    "        #print(input)\n",
    "        predicted_score = model.predict(input)\n",
    "        predicted_score = int(predicted_score[0,0])\n",
    "\n",
    "        print(predicted_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f6078a19",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T20:19:40.998566Z",
     "iopub.status.busy": "2024-11-19T20:19:40.998188Z",
     "iopub.status.idle": "2024-11-19T20:19:41.018661Z",
     "shell.execute_reply": "2024-11-19T20:19:41.017583Z"
    },
    "papermill": {
     "duration": 0.188464,
     "end_time": "2024-11-19T20:19:41.020756",
     "exception": false,
     "start_time": "2024-11-19T20:19:40.832292",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c8a43bdcfc7349329a5852b4c9ebfa01",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Select Venue:', options=('M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium, M…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2035e4e4966a486f9c143cd1eb1b807a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Select Batting Team:', options=('Kolkata Knight Riders', 'Chennai Super Kings', 'Rajasth…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "04de8be00be7497faefa25d32d9a3388",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Select Batting Team:', options=('Royal Challengers Bangalore', 'Kings XI Punjab', 'Delhi…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1e93ba0ac97340958e590269dfa8277f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Select Striker:', options=('SC Ganguly', 'BB McCullum', 'RT Ponting', 'DJ Hussey', 'Moha…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b8593909b96549e2a1d2d10d367b3457",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(description='Select Bowler:', options=('P Kumar', 'Z Khan', 'AA Noffke', 'JH Kallis', 'SB Joshi', 'CL…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ab0c7edc57014411bf41e0092c5f7587",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Button(description='Predict Score', style=ButtonStyle())"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7498c1eb919c4ab7b93ad206807e679e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Output()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict_button.on_click(predict_score)\n",
    "output = widgets.Output()\n",
    "display(venue, batting_team, bowling_team, striker, bowler, predict_button, output)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6122436,
     "sourceId": 9954847,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 214.298258,
   "end_time": "2024-11-19T20:19:43.015639",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-19T20:16:08.717381",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "04de8be00be7497faefa25d32d9a3388": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DropdownModel",
       "_options_labels": [
        "Royal Challengers Bangalore",
        "Kings XI Punjab",
        "Delhi Daredevils",
        "Kolkata Knight Riders",
        "Rajasthan Royals",
        "Mumbai Indians",
        "Chennai Super Kings",
        "Deccan Chargers",
        "Pune Warriors",
        "Kochi Tuskers Kerala",
        "Sunrisers Hyderabad",
        "Rising Pune Supergiants",
        "Gujarat Lions",
        "Rising Pune Supergiant"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "DropdownView",
       "description": "Select Batting Team:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_8318c28e70b543479f453040dcaab169",
       "style": "IPY_MODEL_92af7764c8934420b7c552ff1217b972"
      }
     },
     "18c332320bfd4f0b8b3ec6d3f6dab045": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1e93ba0ac97340958e590269dfa8277f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DropdownModel",
       "_options_labels": [
        "SC Ganguly",
        "BB McCullum",
        "RT Ponting",
        "DJ Hussey",
        "Mohammad Hafeez",
        "PA Patel",
        "ML Hayden",
        "MEK Hussey",
        "MS Dhoni",
        "SK Raina",
        "JDP Oram",
        "S Badrinath",
        "T Kohli",
        "YK Pathan",
        "SR Watson",
        "M Kaif",
        "DS Lehmann",
        "RA Jadeja",
        "M Rawat",
        "D Salunkhe",
        "SK Warne",
        "SK Trivedi",
        "L Ronchi",
        "ST Jayasuriya",
        "DJ Thornely",
        "RV Uthappa",
        "PR Shah",
        "AM Nayar",
        "SM Pollock",
        "Harbhajan Singh",
        "AC Gilchrist",
        "Y Venugopal Rao",
        "VVS Laxman",
        "A Symonds",
        "RG Sharma",
        "SB Styris",
        "AS Yadav",
        "SB Bangar",
        "WPUJC Vaas",
        "RP Singh",
        "K Goel",
        "JR Hopes",
        "KC Sangakkara",
        "DPMD Jayawardene",
        "Yuvraj Singh",
        "IK Pathan",
        "S Sohal",
        "B Lee",
        "PP Chawla",
        "WA Mota",
        "Shahid Afridi",
        "RR Sarwan",
        "S Sreesanth",
        "VRV Singh",
        "S Chanderpaul",
        "R Dravid",
        "LRPL Taylor",
        "JH Kallis",
        "V Kohli",
        "MV Boucher",
        "P Kumar",
        "SB Joshi",
        "Z Khan",
        "R Vinay Kumar",
        "WP Saha",
        "LR Shukla",
        "AB Agarkar",
        "M Kartik",
        "I Sharma",
        "AM Rahane",
        "DJ Bravo",
        "MA Khote",
        "G Gambhir",
        "V Sehwag",
        "S Dhawan",
        "Shoaib Malik",
        "MK Tiwary",
        "KD Karthik",
        "R Bhatia",
        "MF Maharoof",
        "VY Mahesh",
        "DB Das",
        "HH Gibbs",
        "DNT Zoysa",
        "D Kalyankrishna",
        "GC Smith",
        "SA Asnodkar",
        "Sohail Tanvir",
        "SP Fleming",
        "S Vidyut",
        "JA Morkel",
        "LPC Silva",
        "DB Ravi Teja",
        "SE Marsh",
        "YV Takawale",
        "SS Tiwary",
        "RR Raje",
        "Joginder Sharma",
        "MS Gony",
        "M Muralitharan",
        "M Ntini",
        "W Jaffer",
        "CL White",
        "Misbah-ul-Haq",
        "DT Patil",
        "A Kumble",
        "DW Steyn",
        "S Anirudha",
        "MM Patel",
        "AB de Villiers",
        "A Chopra",
        "BJ Hodge",
        "T Taibu",
        "Umar Gul",
        "PP Ojha",
        "SP Goswami",
        "B Akhil",
        "Salman Butt",
        "TM Dilshan",
        "A Mishra",
        "J Arunkumar",
        "Iqbal Abdulla",
        "CK Kapugedera",
        "LA Pomersbach",
        "Shoaib Akhtar",
        "AB Dinda",
        "SR Tendulkar",
        "B Chipli",
        "DR Smith",
        "SD Chitnis",
        "Kamran Akmal",
        "TM Srivastava",
        "MK Pandey",
        "RR Powar",
        "JP Duminy",
        "JD Ryder",
        "KP Pietersen",
        "CH Gayle",
        "MC Henriques",
        "A Flintoff",
        "FH Edwards",
        "PC Valthaty",
        "RJ Quiney",
        "AD Mascarenhas",
        "AS Raut",
        "Pankaj Singh",
        "RS Bopara",
        "DL Vettori",
        "M Manhas",
        "PJ Sangwan",
        "MN van Wyk",
        "AA Bilakhia",
        "TL Suman",
        "Shoaib Ahmed",
        "GR Napier",
        "R Bishnoi",
        "RE van der Merwe",
        "KP Appanna",
        "M Vijay",
        "SB Jakati",
        "L Balaji",
        "NV Ojha",
        "LA Carseldine",
        "RJ Harris",
        "D du Preez",
        "DS Kulkarni",
        "SM Harwood",
        "Yashpal Singh",
        "AN Ghosh",
        "AD Mathews",
        "SM Katich",
        "DA Warner",
        "J Botha",
        "A Nehra",
        "Mashrafe Mortaza",
        "GJ Bailey",
        "AB McDonald",
        "Y Nagar",
        "Niraj Patel",
        "T Henderson",
        "A Singh",
        "R Ashwin",
        "T Thushara",
        "Mohammad Ashraful",
        "CA Pujara",
        "OA Shah",
        "AP Tare",
        "AT Rayudu",
        "R Sathish",
        "R McLaren",
        "MS Bisla",
        "YA Abdulla",
        "EJG Morgan",
        "AA Jhunjhunwala",
        "P Dogra",
        "A Uniyal",
        "KA Pollard",
        "MJ Lumb",
        "DR Martyn",
        "S Narwal",
        "M Morkel",
        "Anirudh Singh",
        "Jaskaran Singh",
        "FY Fazal",
        "AC Voges",
        "MD Mishra",
        "J Theron",
        "R Sharma",
        "Mandeep Singh",
        "KM Jadhav",
        "SW Tait",
        "PD Collingwood",
        "VS Malik",
        "SJ Srivastava",
        "AP Dole",
        "Bipul Sharma",
        "DE Bollinger",
        "BAW Mendis",
        "B Sumanth",
        "C Madan",
        "AG Paunikar",
        "AJ Finch",
        "MR Marsh",
        "STR Binny",
        "IR Jaggi",
        "DT Christian",
        "RV Gomez",
        "UBT Chand",
        "UT Yadav",
        "Sunny Singh",
        "NJ Rimmington",
        "MA Agarwal",
        "AUK Pathan",
        "AL Menaria",
        "DJ Jacobs",
        "WD Parnell",
        "TD Paine",
        "SB Wagh",
        "AC Thomas",
        "BJ Haddin",
        "NLTC Perera",
        "MS Wade",
        "JE Taylor",
        "RN ten Doeschate",
        "SL Malinga",
        "AG Murtaza",
        "TR Birt",
        "Harpreet Singh",
        "NL McCullum",
        "DH Yagnik",
        "AC Blizzard",
        "M Klinger",
        "I Malhotra",
        "A Mithun",
        "P Parameswaran",
        "AA Chavan",
        "ND Doshi",
        "CJ Ferguson",
        "B Kumar",
        "S Rana",
        "JEC Franklin",
        "Shakib Al Hasan",
        "F du Plessis",
        "SPD Smith",
        "MN Samuels",
        "KK Cooper",
        "HV Patel",
        "Ankit Sharma",
        "RE Levi",
        "RR Bhatkal",
        "Harmeet Singh",
        "BA Bhatt",
        "CJ McKay",
        "DJ Harris",
        "N Saini",
        "DA Miller",
        "Azhar Mahmood",
        "A Ashish Reddy",
        "V Pratap Singh",
        "BB Samantray",
        "RJ Peterson",
        "S Nadeem",
        "VR Aaron",
        "MJ Clarke",
        "AP Majumdar",
        "Gurkeerat Singh",
        "P Awana",
        "SP Narine",
        "A Chandila",
        "PA Reddy",
        "MC Juneja",
        "AD Russell",
        "KK Nair",
        "KB Arun Karthik",
        "GH Vihari",
        "MDKJ Perera",
        "R Shukla",
        "JD Unadkat",
        "M Vohra",
        "JP Faulkner",
        "R Rampaul",
        "BJ Rohrer",
        "Q de Kock",
        "KV Sharma",
        "SMSM Senanayake",
        "LJ Wright",
        "X Thalaivan Sargunam",
        "DJG Sammy",
        "MG Johnson",
        "A Mukund",
        "SV Samson",
        "BMAJ Mendis",
        "KL Rahul",
        "CM Gautam",
        "KW Richardson",
        "Parvez Rasool",
        "GJ Maxwell",
        "R Dhawan",
        "SA Yadav",
        "CJ Anderson",
        "JJ Bumrah",
        "CA Lynn",
        "MA Starc",
        "AR Patel",
        "Sandeep Sharma",
        "BR Dunk",
        "Shivam Sharma",
        "LMP Simmons",
        "VH Zol",
        "BCJ Cutting",
        "Mohammed Shami",
        "BE Hendricks",
        "S Gopal",
        "M de Lange",
        "RR Rossouw",
        "JO Holder",
        "JDS Neesham",
        "Imran Tahir",
        "MM Sharma",
        "DJ Hooda",
        "CH Morris",
        "SS Iyer",
        "SA Abbott",
        "AN Ahmed",
        "YS Chahal",
        "J Suchith",
        "P Negi",
        "RG More",
        "Anureet Singh",
        "HH Pandya",
        "NM Coulter-Nile",
        "PV Tambe",
        "MJ McClenaghan",
        "DJ Muthuswami",
        "SN Thakur",
        "SN Khan",
        "D Wiese",
        "S Aravind",
        "JC Buttler",
        "CR Brathwaite",
        "MP Stoinis",
        "C Munro",
        "P Sahu",
        "KH Pandya",
        "TG Southee",
        "MJ Guptill",
        "KJ Abbott",
        "TM Head",
        "AD Nath",
        "NS Naik",
        "Ishan Kishan",
        "SW Billings",
        "RR Pant",
        "KS Williamson",
        "KC Cariappa",
        "PSP Handscomb",
        "Sachin Baby",
        "J Yadav",
        "UT Khawaja",
        "HM Amla",
        "BB Sran",
        "N Rana",
        "F Behardien",
        "ER Dwivedi",
        "JJ Roy",
        "BA Stokes",
        "Vishnu Vinod",
        "TS Mills",
        "Basil Thampi",
        "CR Woakes",
        "V Shankar",
        "Rashid Khan",
        "RA Tripathi",
        "RD Chahar",
        "LH Ferguson",
        "C de Grandhomme",
        "PJ Cummins",
        "Mohammad Nabi",
        "Kuldeep Yadav",
        "Washington Sundar",
        "S Badree",
        "A Choudhary",
        "AR Bawne",
        "AJ Tye",
        "Ankit Soni",
        "K Rabada",
        "AF Milne",
        "SP Jackson",
        "Swapnil Singh",
        "R Tewatia",
        "AS Rajpoot"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "DropdownView",
       "description": "Select Striker:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_534000ab8f0a41339829e4130749996f",
       "style": "IPY_MODEL_ba95711cb73848d7905aad0c28fa51c1"
      }
     },
     "2035e4e4966a486f9c143cd1eb1b807a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DropdownModel",
       "_options_labels": [
        "Kolkata Knight Riders",
        "Chennai Super Kings",
        "Rajasthan Royals",
        "Mumbai Indians",
        "Deccan Chargers",
        "Kings XI Punjab",
        "Royal Challengers Bangalore",
        "Delhi Daredevils",
        "Kochi Tuskers Kerala",
        "Pune Warriors",
        "Sunrisers Hyderabad",
        "Rising Pune Supergiants",
        "Gujarat Lions",
        "Rising Pune Supergiant"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "DropdownView",
       "description": "Select Batting Team:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_9e239074da1048f79e87a47f5cba9f41",
       "style": "IPY_MODEL_b7e972b10cc247918d281cea062c3a6b"
      }
     },
     "39e4c61eee004eeb89c7dac258fe00e0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "51559e3f7f5e49bebcb9a3648fdae441": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "534000ab8f0a41339829e4130749996f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7498c1eb919c4ab7b93ad206807e679e": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/output",
       "_model_module_version": "1.0.0",
       "_model_name": "OutputModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/output",
       "_view_module_version": "1.0.0",
       "_view_name": "OutputView",
       "layout": "IPY_MODEL_39e4c61eee004eeb89c7dac258fe00e0",
       "msg_id": "",
       "outputs": []
      }
     },
     "8318c28e70b543479f453040dcaab169": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8b0c919ae467404a94d4e4416f2eae53": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "92af7764c8934420b7c552ff1217b972": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "9e239074da1048f79e87a47f5cba9f41": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ab0c7edc57014411bf41e0092c5f7587": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ButtonModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ButtonModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ButtonView",
       "button_style": "",
       "description": "Predict Score",
       "disabled": false,
       "icon": "",
       "layout": "IPY_MODEL_18c332320bfd4f0b8b3ec6d3f6dab045",
       "style": "IPY_MODEL_cabe032ab2934c119c678ad0a6bd2650",
       "tooltip": ""
      }
     },
     "b7e972b10cc247918d281cea062c3a6b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "b8593909b96549e2a1d2d10d367b3457": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DropdownModel",
       "_options_labels": [
        "P Kumar",
        "Z Khan",
        "AA Noffke",
        "JH Kallis",
        "SB Joshi",
        "CL White",
        "B Lee",
        "S Sreesanth",
        "JR Hopes",
        "IK Pathan",
        "K Goel",
        "PP Chawla",
        "WA Mota",
        "GD McGrath",
        "B Geeves",
        "MF Maharoof",
        "R Bhatia",
        "DL Vettori",
        "R Vinay Kumar",
        "B Akhil",
        "AB Dinda",
        "I Sharma",
        "AB Agarkar",
        "M Kartik",
        "Mohammad Hafeez",
        "DJ Hussey",
        "MM Patel",
        "SR Watson",
        "SK Trivedi",
        "SK Warne",
        "D Salunkhe",
        "Pankaj Singh",
        "YK Pathan",
        "Mohammad Asif",
        "VY Mahesh",
        "SM Pollock",
        "A Nehra",
        "DS Kulkarni",
        "Harbhajan Singh",
        "DJ Bravo",
        "VS Yeligati",
        "AM Nayar",
        "MA Khote",
        "Sohail Tanvir",
        "JDP Oram",
        "MS Gony",
        "P Amarnath",
        "M Muralitharan",
        "Joginder Sharma",
        "RP Singh",
        "DNT Zoysa",
        "SB Bangar",
        "Shahid Afridi",
        "PP Ojha",
        "D Kalyankrishna",
        "VRV Singh",
        "Yuvraj Singh",
        "DW Steyn",
        "CRD Fernando",
        "ST Jayasuriya",
        "V Kohli",
        "Gagandeep Singh",
        "Umar Gul",
        "SC Ganguly",
        "LR Shukla",
        "PJ Sangwan",
        "Shoaib Malik",
        "V Sehwag",
        "A Kumble",
        "DP Vijaykumar",
        "SB Styris",
        "RR Raje",
        "JA Morkel",
        "L Balaji",
        "CK Kapugedera",
        "DR Smith",
        "WPUJC Vaas",
        "Y Venugopal Rao",
        "AD Mascarenhas",
        "A Mishra",
        "DJ Thornely",
        "PM Sarvesh Kumar",
        "Abdur Razzak",
        "TM Dilshan",
        "SD Chitnis",
        "M Ntini",
        "RR Powar",
        "SK Raina",
        "BAW Mendis",
        "T Thushara",
        "A Flintoff",
        "Kamran Khan",
        "T Henderson",
        "FH Edwards",
        "Harmeet Singh",
        "KP Pietersen",
        "LRPL Taylor",
        "JD Ryder",
        "Anureet Singh",
        "CH Gayle",
        "RR Bose",
        "YA Abdulla",
        "RS Bopara",
        "SL Malinga",
        "DP Nannes",
        "RG Sharma",
        "Shoaib Ahmed",
        "BJ Hodge",
        "RA Jadeja",
        "RE van der Merwe",
        "KP Appanna",
        "JP Duminy",
        "SR Tendulkar",
        "VS Malik",
        "SM Harwood",
        "AS Raut",
        "D du Preez",
        "RJ Harris",
        "TL Suman",
        "A Singh",
        "M Morkel",
        "LA Carseldine",
        "S Tyagi",
        "SB Jakati",
        "A Mithun",
        "AM Rahane",
        "A Symonds",
        "C Nanda",
        "J Botha",
        "CK Langeveldt",
        "SS Sarkar",
        "AM Salvi",
        "Jaskaran Singh",
        "SW Tait",
        "A Uniyal",
        "AA Jhunjhunwala",
        "AD Mathews",
        "RS Gavaskar",
        "R Ashwin",
        "JM Kemp",
        "S Ladda",
        "SE Bond",
        "SJ Srivastava",
        "Bipul Sharma",
        "Y Nagar",
        "UT Yadav",
        "MC Henriques",
        "R McLaren",
        "J Theron",
        "S Narwal",
        "AC Voges",
        "KAJ Roach",
        "KA Pollard",
        "C Ganapathy",
        "SB Wagh",
        "R Sharma",
        "AN Ahmed",
        "R Sathish",
        "AP Dole",
        "FY Fazal",
        "PD Collingwood",
        "MR Marsh",
        "L Ablish",
        "S Sriram",
        "AB McDonald",
        "DE Bollinger",
        "JD Unadkat",
        "MK Tiwary",
        "ND Doshi",
        "Iqbal Abdulla",
        "AL Menaria",
        "STR Binny",
        "AUK Pathan",
        "AG Murtaza",
        "JEC Franklin",
        "AC Thomas",
        "WD Parnell",
        "M Manhas",
        "DT Christian",
        "DB Ravi Teja",
        "BA Bhatt",
        "JJ van der Wath",
        "S Aravind",
        "R Ninan",
        "Shakib Al Hasan",
        "NLTC Perera",
        "RV Gomez",
        "PC Valthaty",
        "S Nadeem",
        "S Randiv",
        "J Syed Mohammad",
        "NL McCullum",
        "JE Taylor",
        "KMDN Kulasekara",
        "TG Southee",
        "P Parameswaran",
        "S Dhawan",
        "B Kumar",
        "AA Kazi",
        "VR Aaron",
        "P Prasanth",
        "Y Gnaneswara Rao",
        "AA Chavan",
        "RW Price",
        "GJ Maxwell",
        "JP Faulkner",
        "DAJ Bracewell",
        "Ankit Sharma",
        "DJ Harris",
        "TP Sudhindra",
        "SP Narine",
        "HV Patel",
        "KK Cooper",
        "GB Hogg",
        "P Awana",
        "MN Samuels",
        "AD Russell",
        "Azhar Mahmood",
        "A Chandila",
        "P Negi",
        "RJ Peterson",
        "CJ McKay",
        "R Shukla",
        "MJ Clarke",
        "V Pratap Singh",
        "A Ashish Reddy",
        "BW Hilfenhaus",
        "K Upadhyay",
        "Sunny Gupta",
        "MG Johnson",
        "JJ Bumrah",
        "AS Rajpoot",
        "B Laughlin",
        "GH Vihari",
        "Mohammed Shami",
        "BMAJ Mendis",
        "CH Morris",
        "Anand Rajan",
        "AJ Finch",
        "MM Sharma",
        "KV Sharma",
        "SMSM Senanayake",
        "R Rampaul",
        "R Dhawan",
        "JO Holder",
        "IC Pandey",
        "LJ Wright",
        "S Kaul",
        "YS Chahal",
        "KW Richardson",
        "DJG Sammy",
        "Sandeep Sharma",
        "PV Tambe",
        "Parvez Rasool",
        "RN ten Doeschate",
        "MG Neser",
        "NM Coulter-Nile",
        "CJ Anderson",
        "MA Starc",
        "AR Patel",
        "JDS Neesham",
        "M Vijay",
        "SA Yadav",
        "S Badree",
        "R Tewatia",
        "V Shankar",
        "Imran Tahir",
        "Shivam Sharma",
        "S Rana",
        "BE Hendricks",
        "PJ Cummins",
        "K Santokie",
        "S Gopal",
        "Karanveer Singh",
        "DJ Muthuswami",
        "TA Boult",
        "SA Abbott",
        "DJ Hooda",
        "P Suyal",
        "J Suchith",
        "D Wiese",
        "MJ McClenaghan",
        "HH Pandya",
        "RG More",
        "GS Sandhu",
        "M de Lange",
        "J Yadav",
        "Gurkeerat Singh",
        "M Ashwin",
        "JW Hastings",
        "C Munro",
        "Mustafizur Rahman",
        "CR Brathwaite",
        "KJ Abbott",
        "P Sahu",
        "BB Sran",
        "KH Pandya",
        "S Kaushik",
        "T Shamsi",
        "MP Stoinis",
        "Swapnil Singh",
        "SM Boland",
        "CJ Jordan",
        "KC Cariappa",
        "A Zampa",
        "BCJ Cutting",
        "DL Chahar",
        "KS Williamson",
        "Kuldeep Yadav",
        "TS Mills",
        "A Choudhary",
        "TM Head",
        "BA Stokes",
        "CR Woakes",
        "T Natarajan",
        "Rashid Khan",
        "C de Grandhomme",
        "Basil Thampi",
        "AJ Tye",
        "AF Milne",
        "K Rabada",
        "Washington Sundar",
        "SN Thakur",
        "SS Agarwal",
        "NB Singh",
        "Ankit Soni",
        "Mohammad Nabi",
        "Mohammed Siraj",
        "LH Ferguson"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "DropdownView",
       "description": "Select Bowler:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_fee7c21cfe1f492ebc103d166bfc28dd",
       "style": "IPY_MODEL_51559e3f7f5e49bebcb9a3648fdae441"
      }
     },
     "ba95711cb73848d7905aad0c28fa51c1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "c8a43bdcfc7349329a5852b4c9ebfa01": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DropdownModel",
       "_options_labels": [
        "M Chinnaswamy Stadium",
        "Punjab Cricket Association Stadium, Mohali",
        "Feroz Shah Kotla",
        "Wankhede Stadium",
        "Eden Gardens",
        "Sawai Mansingh Stadium",
        "Rajiv Gandhi International Stadium, Uppal",
        "MA Chidambaram Stadium, Chepauk",
        "Dr DY Patil Sports Academy",
        "Newlands",
        "St George's Park",
        "Kingsmead",
        "SuperSport Park",
        "Buffalo Park",
        "New Wanderers Stadium",
        "De Beers Diamond Oval",
        "OUTsurance Oval",
        "Brabourne Stadium",
        "Sardar Patel Stadium, Motera",
        "Barabati Stadium",
        "Vidarbha Cricket Association Stadium, Jamtha",
        "Himachal Pradesh Cricket Association Stadium",
        "Nehru Stadium",
        "Holkar Cricket Stadium",
        "Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium",
        "Subrata Roy Sahara Stadium",
        "Shaheed Veer Narayan Singh International Stadium",
        "JSCA International Stadium Complex",
        "Sheikh Zayed Stadium",
        "Sharjah Cricket Stadium",
        "Dubai International Cricket Stadium",
        "Maharashtra Cricket Association Stadium",
        "Punjab Cricket Association IS Bindra Stadium, Mohali",
        "Saurashtra Cricket Association Stadium",
        "Green Park"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "DropdownView",
       "description": "Select Venue:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_8b0c919ae467404a94d4e4416f2eae53",
       "style": "IPY_MODEL_fba39f04f17740d58c662d8069e9a1ad"
      }
     },
     "cabe032ab2934c119c678ad0a6bd2650": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ButtonStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ButtonStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "button_color": null,
       "font_weight": ""
      }
     },
     "fba39f04f17740d58c662d8069e9a1ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "fee7c21cfe1f492ebc103d166bfc28dd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
